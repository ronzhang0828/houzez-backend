name: Deploy to ECR (Production)

on: [workflow_dispatch]
#   push:
#     branches: [ "main" ]
#   pull_request:
#     types:  [ opened, synchronize, reopened ]
#     branches: [ "main" ]

jobs:
  sonarcloud:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            chmod 777 ./gradlew
            ./gradlew build sonarqube --info
            ./gradlew test jacocoTestReport sonarqube
  
  build:
  
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    
    - name: Check out code
      uses: actions/checkout@v2
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: houzez-backend-prod
#         IMAGE_TAG: nodejs_demo_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
